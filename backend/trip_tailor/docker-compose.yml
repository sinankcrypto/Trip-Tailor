services:
  db:
    image: postgres:15-alpine
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${DB_NAME:-trip_tailor}
      POSTGRES_USER: ${DB_USER:-tripuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-trippass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-tripuser} -d ${DB_NAME:-trip_tailor}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  web:
    build: .
    command: gunicorn trip_tailor.wsgi:application --bind 0.0.0.0:8000 --workers 3
    environment:
      RUN_MIGRATIONS: "true"
    env_file:
      - ./.env
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  worker:
    build: .
    command: celery -A trip_tailor worker --loglevel=info
    environment:
      RUN_MIGRATIONS: "false"
    env_file:
      - ./.env
    volumes:
      - .:/app
    depends_on:
      web:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_started

  beat:
    build: .
    command: celery -A trip_tailor beat --loglevel=info
    environment:
      RUN_MIGRATIONS: "false"
    env_file:
      - ./.env
    volumes:
      - .:/app
    depends_on:
      web:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres_data:
  redis_data: